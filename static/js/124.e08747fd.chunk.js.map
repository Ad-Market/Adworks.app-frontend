{"version":3,"sources":["views/apps/ecommerce/buy-detail/ProductDetails.js","views/apps/ecommerce/buy-detail/index.js","@core/components/breadcrumbs/index.js"],"names":["Product","props","data","dispatch","productId","useState","value","setValue","previewArr","category","setCategory","filename","originName","resData","uppy","Uppy","showSelectedFiles","use","Webcam","XHRUpload","endpoint","method","formData","metaFields","fieldName","on","file","upload","then","result","console","info","successful","response","body","orginName","failed","length","error","forEach","Row","className","Col","md","xs","title","parseInt","userNumber","tokenType","budget","Card","CardHeader","CardTitle","tag","CardBody","CustomInput","type","id","label","defaultChecked","name","inline","onClick","e","target","Input","rows","style","height","placeholder","onChange","valid","Label","classnames","plugins","width","hideUploadButton","hideRetryButton","hidePauseResumeButton","hideCancelButton","hideProgressAfterFinish","map","src","index","alt","Button","color","postData","Object","assign","description","originalFilename","log","postTask","disabled","outline","Link","to","Details","useParams","useDispatch","store","useSelector","state","ecommerce","useEffect","getBuyTaskDetail","breadCrumbTitle","breadCrumbParent","breadCrumbActive","keys","buyTaskDetail","ProductDetails","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","active"],"mappings":"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","file":"static/js/124.e08747fd.chunk.js","sourcesContent":["// ** React Imports\nimport { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  Card, CardHeader, CardTitle, CardBody, Input, Label, Row,\n  Col, CardText, Button, CustomInput\n} from 'reactstrap'\n\nimport { postTask } from '../store/actions'\n\nimport Uppy from '@uppy/core'\nimport { Dashboard } from \"@uppy/react\"\nimport Webcam from \"@uppy/webcam\"\nimport \"@uppy/core/dist/style.css\"\nimport \"@uppy/dashboard/dist/style.css\"\n// ** Third Party Components\nimport classnames from 'classnames'\nimport XHRUpload from '@uppy/xhr-upload'\n\nconst Product = props => {\n  // ** Props\n  const { data, dispatch, productId } = props\n  const [value, setValue] = useState('')\n  const [previewArr, setPreviewArr] = useState([])\n  const [category, setCategory] = useState('retweet')\n  let filename = ''\n  let originName = ''\n  let resData = {}\n  const uppy = Uppy({ showSelectedFiles: false }).use(Webcam)\n\n  uppy.use(XHRUpload, {\n    endpoint: 'http://localhost:3997/uploadFile',\n    // endpoint: 'https://adworks.app/uploadFile',\n    method: 'post',\n    formData: true,\n    metaFields: null,\n    fieldName: 'files'\n  })\n\n  uppy.on('file-added', (file) => {\n    uppy.upload().then((result) => {\n      console.info('Successful uploads:', result.successful[0].response)\n      resData = result.successful[0].response.body\n      filename = resData.filename\n      originName = resData.orginName\n      if (result.failed.length > 0) {\n        console.error('Errors:')\n        result.failed.forEach((file) => {\n          console.error(file.error)\n        })\n      }\n    })\n  })\n\n  const renderPreview = () => {\n    if (previewArr.length) {\n      return previewArr.map((src, index) => <img key={index} className='rounded mt-2 mr-1' src={src} alt='avatar' />)\n    } else {\n      return null\n    }\n  }\n  const myfunc = () => {\n    const postData = {}\n    Object.assign(postData, data)\n    postData.description = value\n    postData.category = category\n    postData.filename = filename\n    postData.originalFilename = originName\n    console.log(postData)\n    dispatch(postTask(postData))\n  }\n\n  return (\n    <Row className='my-2'>\n      <Col md='12' xs='12'>\n        <div>\n          <h4>Task Title: {data.title}</h4>\n          <div className='ecommerce-details-price d-flex flex-column align-items-end mt-1'>\n            <h5 className=' mr-1'>Attend Number: {parseInt(data.userNumber)}</h5>\n            <h5 className='item-price mr-1'>{`Price:${data.tokenType} ${data.budget}`}</h5>\n          </div>\n          <Card className=\"mb-0\">\n            <CardHeader className='pb-0'>\n              <CardTitle tag='h4'>Category</CardTitle>\n            </CardHeader>\n\n            <CardBody className=\"pb-0\">\n              <div className='demo-inline-spacing'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-success'\n                  id='success'\n                  label='Retweet'\n                  defaultChecked\n                  name=\"rst\"\n                  inline\n                  value=\"retweet\"\n                  onClick={(e) => setCategory(e.target.value)}\n                />\n                <CustomInput\n                  type='radio'\n                  className='custom-control-warning'\n                  id='warning'\n                  name=\"rst\"\n                  label='Upvote'\n                  inline\n                  value=\"upvote\"\n                  onClick={(e) => setCategory(e.target.value)}\n                />\n                <CustomInput\n                  type='radio'\n                  className='custom-control-danger'\n                  id='danger'\n                  name=\"rst\"\n                  label='CMC'\n                  inline\n                  value=\"cmc\"\n                  onClick={(e) => setCategory(e.target.value)}\n                />\n                <CustomInput\n                  type='radio'\n                  className='custom-control-info'\n                  name=\"rst\"\n                  id='info'\n                  label='Join Telegram'\n                  inline\n                  value=\"join-telegram\"\n                  onClick={(e) => setCategory(e.target.value)}\n                />\n              </div>\n            </CardBody>\n          </Card>\n\n          <Card className=\"mb-0\">\n            <CardHeader>\n              <CardTitle tag='h4'>Description</CardTitle>\n            </CardHeader>\n\n            <CardBody className=\"pb-0\">\n              <div className='form-label-group mb-0'>\n                <Input\n                  type='textarea'\n                  name='text'\n                  id='exampleText'\n                  rows='3'\n                  value={value}\n                  style={{ height: 150 }}\n                  placeholder='Describe Your Description'\n                  onChange={e => setValue(e.target.value)}\n                  valid={value.length > 50 && true}\n                />\n                <Label>Describe Your Description</Label>\n              </div>\n              <span\n                className={classnames('textarea-counter-value float-right', {\n                  'bg-danger': value.length < 50\n                })}\n              >\n                {`${value.length}/50`}\n              </span>\n            </CardBody>\n          </Card>\n          <Card className=\"mb-0\">\n            <CardHeader className=\"pt-0\">\n              <CardTitle tag='h4'> Add Image</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pb-0\">\n              <Dashboard\n                uppy={uppy}\n                plugins={[\"Webcam\"]}\n                width={'100%'}\n                height={200}\n                hideUploadButton={true}\n                // modes='picture'\n                hideRetryButton={true}\n                hidePauseResumeButton={true}\n                hideCancelButton={true}\n                hideProgressAfterFinish={true} />\n              {renderPreview()}\n            </CardBody>\n          </Card>\n          <hr />\n          <div className='d-flex flex-column flex-sm-row pt-1'>\n            <Button\n              className='btn-cart mr-0 mr-sm-1 mb-1 mb-sm-0'\n              color='primary'\n              onClick={myfunc}\n              disabled={value.length <= 50}\n            >\n              Post\n            </Button>\n            <Button\n              className='btn-wishlist mr-0 mr-sm-1 mb-1 mb-sm-0'\n              color='secondary'\n              outline\n              tag={Link}\n              to={'/apps/task/buy-job'}\n            >\n              <span>Back</span>\n            </Button>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Product\n","// ** React Imports\nimport { useState, useEffect, Fragment } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport BreadCrumbs from '@components/breadcrumbs'\nimport ProductDetails from './ProductDetails'\n// ** Store & Actions\n// import { getProduct, addToCart } from '../store/actions'\n\nimport '@styles/base/pages/app-ecommerce-details.scss'\n\nimport { Card, CardBody, Button, Label, Input, CustomInput, Row, Col } from 'reactstrap'\n// ** Store & Actions\nimport { getBuyTaskDetail } from '../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\n// ** Styles\nimport '@styles/react/apps/app-invoice.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\n\nconst Details = () => {\n  // ** Vars\n  const { id } = useParams()\n  const productId = id\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n  // const taskdata = []\n  // for (let i = 0; i < store.length; i++) {\n  //   if (productId === store[i]._id) {\n  //     taskdata.push(store[i])\n  //   }\n  // }\n  useEffect(() => {\n    dispatch(getBuyTaskDetail(productId))\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs breadCrumbTitle='Task Details' breadCrumbParent='Task' breadCrumbActive='Post Task' />\n      <div className='app-ecommerce-details d-flex justify-content-center'>\n        {Object.keys(store.buyTaskDetail).length ? (\n          <Card className=\"w-75\">\n            <CardBody>\n              <ProductDetails\n                dispatch={dispatch}\n                productId={productId}\n                data={store.buyTaskDetail[0]}\n              />\n            </CardBody>\n          </Card>\n\n        ) : null}\n\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Details\n","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='#'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  <Link to='#'>{breadCrumbParent}</Link>\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div> */}\n    </div>\n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}