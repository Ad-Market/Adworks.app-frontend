{"version":3,"sources":["views/pages/authentication/Register.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupAddon.js","@core/components/input-password-toggle/index.js"],"names":["RegisterV1","useContext","AbilityContext","history","useHistory","dispatch","useDispatch","useForm","register","errors","handleSubmit","trigger","useState","valErrors","setValErrors","username","setUsername","email","setEmail","password","setPassword","setTerms","role","setRole","tagOptions","value","label","ToastContent","name","className","size","color","icon","Terms","require","default","href","onClick","e","preventDefault","to","src","Pic","action","onSubmit","isObjEmpty","useJwt","then","res","data","error","arr","property","console","user","accessToken","handleLogin","push","toast","success","fullName","transition","Slide","hideProgressBar","autoClose","catch","err","log","for","autoFocus","type","placeholder","id","onChange","errs","target","classnames","innerRef","required","validate","Object","keys","length","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","checked","invalid","terms","Ripple","block","propTypes","tag","tagPropType","inverse","PropTypes","bool","string","body","outline","cssModule","object","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","InputGroupText","InputGroup","addonType","oneOf","isRequired","children","node","InputGroupAddon","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","renderIcon"],"mappings":"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","file":"static/js/136.1a2d16d2.chunk.js","sourcesContent":["import { Fragment, useState, useContext, useEffect } from 'react'\nimport { isObjEmpty, selectThemeColors } from '@utils'\nimport classnames from 'classnames'\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useDispatch } from 'react-redux'\nimport { toast, Slide } from 'react-toastify'\nimport { useForm } from 'react-hook-form'\nimport { handleLogin } from '@store/actions/auth'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport Select, { components } from 'react-select'\nimport Avatar from '@components/avatar'\nimport { Facebook, Twitter, Mail, GitHub, Coffee } from 'react-feather'\nimport { Row, Col, Card, CardBody, CardTitle, CardText, FormGroup, Label, Button, Form, Input, CustomInput } from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\nimport Pic from '@src/assets/images/logo/logo.png'\n\nconst RegisterV1 = () => {\n  const ability = useContext(AbilityContext)\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const { register, errors, handleSubmit, trigger } = useForm()\n\n  const [valErrors, setValErrors] = useState({})\n  const [username, setUsername] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [terms, setTerms] = useState(false),\n    [role, setRole] = useState(\"client\")\n\n  const tagOptions = [\n    { value: 'client', label: 'Client' },\n    { value: 'user', label: 'User' }\n  ]\n\n  const ToastContent = ({ name, role }) => (\n    <Fragment>\n      <div className='toastify-header'>\n        <div className='title-wrapper'>\n          <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\n          <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\n        </div>\n      </div>\n      <div className='toastify-body'>\n        <span>You have successfully logged in as an {role} to Adworks. Now you can start to work. Enjoy!</span>\n      </div>\n    </Fragment>\n  )\n\n  const illustration = 'register-v2-dark.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const Terms = () => {\n    return (\n      <Fragment>\n        I agree to\n        <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\n          privacy policy & terms\n        </a>\n      </Fragment>\n    )\n  }\n\n  const onSubmit = () => {\n    if (isObjEmpty(errors)) {\n      useJwt\n        .register({ username, email, password, role })\n        .then(res => {\n          if (res.data.error) {\n            const arr = {}\n            for (const property in res.data.error) {\n              if (res.data.error[property] !== null) arr[property] = res.data.error[property]\n            }\n            setValErrors(arr)\n            if (res.data.error.email !== null) console.error(res.data.error.email)\n            if (res.data.error.username !== null) console.error(res.data.error.username)\n          } else {\n            setValErrors({})\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\n            dispatch(handleLogin(data))\n            if (data.role === 'admin') {\n              history.push('/')\n            } else if (data.role === 'client') {\n              history.push('/apps/task/list')\n            } else if (data.role === 'user') {\n              history.push('/apps/post-task/list')\n            }\n\n            toast.success(\n              <ToastContent name={data.fullName || data.username || ''} role={data.role || 'admin'} />,\n              { transition: Slide, hideProgressBar: true, autoClose: 2000 }\n            )\n          }\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  const handleUsernameChange = e => {\n    const errs = valErrors\n    if (errs.username) delete errs.username\n    setUsername(e.target.value)\n    setValErrors(errs)\n  }\n\n  const handleEmailChange = e => {\n    const errs = valErrors\n    if (errs.email) delete errs.email\n    setEmail(e.target.value)\n    setValErrors(errs)\n  }\n\n  return (\n    <div className='auth-wrapper auth-v1 px-2'>\n      <div className='auth-inner py-2'>\n        <Card className='mb-0'>\n          <CardBody>\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n              <img className='brand-text text-primary' src={Pic} />\n            </Link>\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Input\n                  autoFocus\n                  type='text'\n                  value={username}\n                  placeholder='johndoe'\n                  id='register-username'\n                  name='register-username'\n                  onChange={handleUsernameChange}\n                  className={classnames({ 'is-invalid': errors['register-username'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.username ? (\n                  <small className='text-danger'>{valErrors.username}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Input\n                  type='email'\n                  value={email}\n                  id='register-email'\n                  name='register-email'\n                  onChange={handleEmailChange}\n                  placeholder='john@example.com'\n                  className={classnames({ 'is-invalid': errors['register-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.email ? (\n                  <small className='text-danger'>{valErrors.email}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-password'>\n                  Role\n                </Label>\n                <Select\n                  id='task-tags'\n                  theme={selectThemeColors}\n                  className='react-select'\n                  classNamePrefix='select'\n                  defaultValue={tagOptions[0]}\n                  options={tagOptions}\n                  isClearable={false}\n                  onChange={({ value }) => setRole(value)}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle\n                  value={password}\n                  id='register-password'\n                  name='register-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['register-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type='checkbox'\n                  id='terms'\n                  name='terms'\n                  value='terms'\n                  label={<Terms />}\n                  className='custom-control-Primary'\n                  innerRef={register({ required: true })}\n                  onChange={e => setTerms(e.target.checked)}\n                  invalid={errors.terms && true}\n                />\n              </FormGroup>\n              <Button.Ripple type='submit' block color='primary'>\n                Sign up\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>Already have an account?</span>\n              <Link to='/login'>\n                <span>Sign in instead</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button.Ripple color='facebook'>\n                <Facebook size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='twitter'>\n                <Twitter size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='google'>\n                <Mail size={14} />\n              </Button.Ripple>\n              <Button.Ripple className='mr-0' color='github'>\n                <GitHub size={14} />\n              </Button.Ripple>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterV1\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}