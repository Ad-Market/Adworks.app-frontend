{"version":3,"sources":["views/pages/authentication/RegisterV1.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardText.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupAddon.js","@core/components/input-password-toggle/index.js"],"names":["RegisterV1","ability","useContext","AbilityContext","useSkin","history","useHistory","dispatch","useDispatch","useForm","register","errors","handleSubmit","trigger","useState","email","setEmail","valErrors","setValErrors","username","setUsername","password","setPassword","setTerms","Terms","require","default","className","href","onClick","e","preventDefault","to","src","Pic","tag","action","onSubmit","isObjEmpty","useJwt","then","res","data","error","arr","property","console","user","accessToken","update","handleLogin","push","catch","err","log","for","autoFocus","type","value","placeholder","id","name","onChange","errs","target","classnames","innerRef","required","validate","Object","keys","length","label","checked","invalid","terms","Ripple","block","color","size","propTypes","tagPropType","inverse","PropTypes","bool","string","body","outline","cssModule","object","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","CardTitle","CardText","InputGroupText","InputGroup","addonType","oneOf","isRequired","children","node","InputGroupAddon","InputPasswordToggle","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","renderIcon"],"mappings":"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","file":"static/js/119.ef759980.chunk.js","sourcesContent":["import { Fragment, useState, useContext } from 'react'\nimport { isObjEmpty } from '@utils'\nimport classnames from 'classnames'\nimport { useSkin } from '@hooks/useSkin'\nimport useJwt from '@src/auth/jwt/useJwt'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from 'react-hook-form'\nimport { handleLogin } from '@store/actions/auth'\nimport { Link, useHistory } from 'react-router-dom'\nimport { AbilityContext } from '@src/utility/context/Can'\nimport InputPasswordToggle from '@components/input-password-toggle'\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\nimport { Row, Col, Card, CardBody, CardTitle, CardText, FormGroup, Label, Button, Form, Input, CustomInput } from 'reactstrap'\n\nimport '@styles/base/pages/page-auth.scss'\nimport Pic from '@src/assets/images/logo/logo.png'\n\nconst RegisterV1 = () => {\n  const ability = useContext(AbilityContext)\n\n  const [skin, setSkin] = useSkin()\n\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n\n  const { register, errors, handleSubmit, trigger } = useForm()\n\n  const [email, setEmail] = useState('')\n  const [valErrors, setValErrors] = useState({})\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [terms, setTerms] = useState(false)\n\n  const illustration = 'register-v2-dark.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  const RememberMe = () => {\n    return (\n      <Fragment>\n        I agree to\n        <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\n          privacy policy & terms\n        </a>\n      </Fragment>\n    )\n  }\n  const Terms = () => {\n    return (\n      <Fragment>\n        I agree to\n        <a className='ml-25' href='/' onClick={e => e.preventDefault()}>\n          privacy policy & terms\n        </a>\n      </Fragment>\n    )\n  }\n\n  const onSubmit = () => {\n    if (isObjEmpty(errors)) {\n      useJwt\n        .register({ username, email, password })\n        .then(res => {\n          if (res.data.error) {\n            const arr = {}\n            for (const property in res.data.error) {\n              if (res.data.error[property] !== null) arr[property] = res.data.error[property]\n            }\n            setValErrors(arr)\n            if (res.data.error.email !== null) console.error(res.data.error.email)\n            if (res.data.error.username !== null) console.error(res.data.error.username)\n          } else {\n            setValErrors({})\n            const data = { ...res.data.user, accessToken: res.data.accessToken }\n            ability.update(res.data.user.ability)\n            dispatch(handleLogin(data))\n            history.push('/')\n          }\n        })\n        .catch(err => console.log(err))\n    }\n  }\n\n  const handleUsernameChange = e => {\n    const errs = valErrors\n    if (errs.username) delete errs.username\n    setUsername(e.target.value)\n    setValErrors(errs)\n  }\n\n  const handleEmailChange = e => {\n    const errs = valErrors\n    if (errs.email) delete errs.email\n    setEmail(e.target.value)\n    setValErrors(errs)\n  }\n\n  return (\n    <div className='auth-wrapper auth-v1 px-2'>\n      <div className='auth-inner py-2'>\n        <Card className='mb-0'>\n          <CardBody>\n            <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n              <img className='brand-text text-primary' src={Pic} />\n            </Link>\n            <CardTitle tag='h4' className='mb-1'>\n              Adventure starts here 🚀\n            </CardTitle>\n            <CardText className='mb-2'>Make your app management easy and fun!</CardText>\n            {/* <Form className='auth-register-form mt-2' onSubmit={e => e.preventDefault()}>\n              <FormGroup>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Input type='text' id='register-username' placeholder='johndoe' autoFocus />\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Input type='email' id='register-email' placeholder='john@example.com' />\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle className='input-group-merge' id='register-password' />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type='checkbox'\n                  className='custom-control-Primary'\n                  id='remember-me'\n                  label={<RememberMe />}\n                />\n              </FormGroup>\n              <Button.Ripple color='primary' block>\n                Sign up\n              </Button.Ripple>\n            </Form> */}\n            <Form action='/' className='auth-register-form mt-2' onSubmit={handleSubmit(onSubmit)}>\n              <FormGroup>\n                <Label className='form-label' for='register-username'>\n                  Username\n                </Label>\n                <Input\n                  autoFocus\n                  type='text'\n                  value={username}\n                  placeholder='johndoe'\n                  id='register-username'\n                  name='register-username'\n                  onChange={handleUsernameChange}\n                  className={classnames({ 'is-invalid': errors['register-username'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.username ? (\n                  <small className='text-danger'>{valErrors.username}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-email'>\n                  Email\n                </Label>\n                <Input\n                  type='email'\n                  value={email}\n                  id='register-email'\n                  name='register-email'\n                  onChange={handleEmailChange}\n                  placeholder='john@example.com'\n                  className={classnames({ 'is-invalid': errors['register-email'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n                {Object.keys(valErrors).length && valErrors.email ? (\n                  <small className='text-danger'>{valErrors.email}</small>\n                ) : null}\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='register-password'>\n                  Password\n                </Label>\n                <InputPasswordToggle\n                  value={password}\n                  id='register-password'\n                  name='register-password'\n                  className='input-group-merge'\n                  onChange={e => setPassword(e.target.value)}\n                  className={classnames({ 'is-invalid': errors['register-password'] })}\n                  innerRef={register({ required: true, validate: value => value !== '' })}\n                />\n              </FormGroup>\n              <FormGroup>\n                <CustomInput\n                  type='checkbox'\n                  id='terms'\n                  name='terms'\n                  value='terms'\n                  label={<Terms />}\n                  className='custom-control-Primary'\n                  innerRef={register({ required: true })}\n                  onChange={e => setTerms(e.target.checked)}\n                  invalid={errors.terms && true}\n                />\n              </FormGroup>\n              <Button.Ripple type='submit' block color='primary'>\n                Sign up\n              </Button.Ripple>\n            </Form>\n            <p className='text-center mt-2'>\n              <span className='mr-25'>Already have an account?</span>\n              <Link to='/pages/login-v1'>\n                <span>Sign in instead</span>\n              </Link>\n            </p>\n            <div className='divider my-2'>\n              <div className='divider-text'>or</div>\n            </div>\n            <div className='auth-footer-btn d-flex justify-content-center'>\n              <Button.Ripple color='facebook'>\n                <Facebook size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='twitter'>\n                <Twitter size={14} />\n              </Button.Ripple>\n              <Button.Ripple color='google'>\n                <Mail size={14} />\n              </Button.Ripple>\n              <Button.Ripple className='mr-0' color='github'>\n                <GitHub size={14} />\n              </Button.Ripple>\n            </div>\n          </CardBody>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterV1\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\n\nconst InputPasswordToggle = props => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\n      <InputGroup\n        className={classnames({\n          [className]: className\n        })}\n      >\n        <Input\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\n        </InputGroupAddon>\n      </InputGroup>\n    </Fragment>\n  )\n}\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName, componentName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName, componentName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n"],"sourceRoot":""}